name: Encode 720p Video

on:
  workflow_dispatch:
    inputs:
      video_url:
        description: "Direct URL of the video to process"
        required: true
      uuid:
        description: "Unique folder name for output (e.g., random UUID)"
        required: true
      file_name:
        description: "Original uploaded file name"
        required: true

jobs:
  encode720p:
    runs-on: ubuntu-latest
    env:
      FTP_HOST: ${{ secrets.FTP_HOST }}
      FTP_USER: ${{ secrets.FTP_USER }}
      FTP_PASS: ${{ secrets.FTP_PASS }}
      FTP_BASE_URL: "/public_html/s3_video/videos" # âœ… points to s3_video
      DOMAIN: "https://kuntalworks.com"

    steps:
      - uses: actions/checkout@v4

      - name: Install FFmpeg and lftp
        run: sudo apt update && sudo apt install -y ffmpeg lftp openssl

      - name: Prepare folders
        run: mkdir -p work/720p encryption

      - name: Download video
        run: wget -O work/input.mp4 "${{ github.event.inputs.video_url }}"

      - name: Generate encryption key
        run: |
          openssl rand 16 > encryption/key.bin
          # Updated URL to include s3_video
          echo "${{ env.DOMAIN }}/s3_video/videos/${{ github.event.inputs.uuid }}/segments/720p/key.key" > encryption/key_info.txt
          echo "encryption/key.bin" >> encryption/key_info.txt
          echo "" >> encryption/key_info.txt

      - name: Encode 720p
        run: |
          ffmpeg -i work/input.mp4 \
            -vf scale=-2:720 -c:a aac -ar 48000 -b:a 128k \
            -c:v h264 -profile:v main -crf 20 -g 48 -keyint_min 48 \
            -hls_time 6 -hls_playlist_type vod \
            -hls_key_info_file encryption/key_info.txt \
            -hls_segment_filename work/720p/%03d.ts \
            work/720p/playlist.m3u8

      - name: Upload to FTP
        run: |
          lftp -u "$FTP_USER","$FTP_PASS" $FTP_HOST <<EOF
          set ftp:ssl-allow no
          mkdir -p $FTP_BASE_URL/${{ github.event.inputs.uuid }}/segments/720p
          mirror -R work/720p $FTP_BASE_URL/${{ github.event.inputs.uuid }}/segments/720p
          put encryption/key.bin -o $FTP_BASE_URL/${{ github.event.inputs.uuid }}/segments/720p/key.key
          bye
          EOF

      - name: Notify completion to webhook
        run: |
          curl -X POST https://${{ env.DOMAIN }}/s3_video/workflow_complete.php \
            -d "uuid=${{ github.event.inputs.uuid }}" \
            -d "resolution=720p" \
            -d "fileName=${{ github.event.inputs.file_name }}"
